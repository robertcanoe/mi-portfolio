---
interface Props {
  text: string;
  delay?: number;
  speed?: number;
  class?: string;
  cursor?: boolean;
}

const { 
  text, 
  delay = 0, 
  speed = 50, 
  class: className = "",
  cursor = true 
} = Astro.props;
---

<span
  class:list={[className]}
  data-gsap="type-writer"
  data-text={text}
  data-delay={delay}
  data-speed={speed}
>
</span>
<span
  class="after:content-['|'] after:ml-1 after:animate-blink inline-block"
  data-cursor
></span>

<script>
  function typeWriter(element: Element) {
    const text = element.getAttribute("data-text") || "";
    const delay = Number(element.getAttribute("data-delay")) || 0;
    const speed = Number(element.getAttribute("data-speed")) || 50;
    const cursor = element.nextElementSibling as HTMLElement;
    
    // Limpiar cualquier animación previa
    const existingTimeout = element.getAttribute("data-timeout-id");
    if (existingTimeout) {
      clearTimeout(Number(existingTimeout));
    }
    
    // Limpiar el contenido previo
    element.textContent = "";
    
    // Mostrar el cursor mientras se escribe
    if (cursor) {
      cursor.style.opacity = "1";
    }
    
    // Función para escribir caracter por caracter
    function writeText() {
      let currentIndex = 0;
      
      function addNextChar() {
        if (currentIndex < text.length) {
          element.textContent = text.substring(0, currentIndex + 1);
          currentIndex++;
          setTimeout(addNextChar, speed);
        } else {
          // Cuando termine de escribir, ocultar el cursor después de un breve delay
          if (cursor) {
            setTimeout(() => {
              cursor.style.transition = "opacity 0.3s ease";
              cursor.style.opacity = "0";
            }, 500);
          }
        }
      }
      
      addNextChar();
    }
    
    // Iniciar la escritura después del delay especificado
    const timeoutId = setTimeout(writeText, delay);
    element.setAttribute("data-timeout-id", timeoutId.toString());
  }

  function initTypeWriters() {
    document.querySelectorAll('[data-gsap="type-writer"]').forEach(typeWriter);
  }

  // Manejar tanto la carga inicial como las navegaciones de Astro
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initTypeWriters);
  } else {
    initTypeWriters();
  }

  // Para navegación SPA de Astro
  document.addEventListener('astro:page-load', initTypeWriters);
</script>

<style>
  @keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0; }
  }

  .animate-blink {
    animation: blink 1s step-end infinite;
  }
</style>
